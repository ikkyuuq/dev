// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "features": {
    "edit_prediction_provider": "zed"
  },
  "ui_font_family": "IosevkaTerm Nerd Font",
  "buffer_font_family": "IosevkaTerm Nerd Font",
  "buffer_line_height": "comfortable",
  "icon_theme": "Catppuccin Mocha",
  "assistant": {
    "default_model": {
      "provider": "google",
      "model": "gemini-2.0-pro-exp"
    },
    "version": "2"
  },
  "project_panel": {
    "dock": "right"
  },
  "cursor_blink": false,
  "cursor_shape": "block",
  "relative_line_numbers": true,
  "toolbar": {
    "breadcrumbs": false,
    "quick_actions": false,
    "selections_menu": false
  },
  "hide_mouse": "on_typing_and_movement",
  "show_edit_predictions": false,
  "inlay_hints": {
    "enabled": false
  },
  "telemetry": {
    "metrics": false,
    "diagnostics": true
  },
  "scrollbar": {
    "show": "never"
  },
  "indent_guides": {
    "coloring": "indent_aware"
  },
  "wrap_guides": [90],
  "show_wrap_guides": true,
  "base_keymap": "VSCode",
  "vim_mode": true,
  "ui_font_size": 24,
  "buffer_font_size": 24,
  "theme": {
    "mode": "dark",
    "light": "Solarized Light",
    "dark": "Solarized Dark"
  },
  "git": {
    "git_gutter": "tracked_files",
    "inline_blame": {
      "enabled": true
    }
  },
  "languages": {
    "TypeScript": {
      "language_servers": ["typescript-language-server", "!vtsls", "..."]
    },
    "TSX": {
      "language_servers": ["typescript-language-server", "!vtsls", "..."]
    },
    "JavaScript": {
      "language_servers": ["typescript-language-server", "!vtsls", "..."],
      "formatter": {
        "code_actions": {
          "source.fixAll.eslint": true
        }
      }
    }
  },
  "lsp": {
    "eslint": {
      "settings": {
        "codeActionOnSave": {
          "rules": ["import/order"]
        },
        "problems": {
          "shortenToSingleLine": true
        }
      }
    },
    "formatter": {
      "external": {
        "command": "prettier",
        "arguments": ["--stdin-filepath", "{buffer_path}"]
      }
    }
  },
  "rust-analyzer": {
    "initialization_options": {
      "diagnostics": {
        "experimental": {
          "enable": true
        }
      },
      "inlayHints": {
        "maxLength": null,
        "lifetimeElisionHints": {
          "enable": "skip_trivial",
          "useParameterNames": true
        },
        "closureReturnTypeHints": {
          "enable": "always"
        }
      },
      "completion": {
        "snippets": {
          "custom": {
            "println!": {
              "postfix": "log",
              "body": ["println!(\"{:?}\",${receiver})"],
              "description": "println!()",
              "scope": "expr"
            },
            "Arc::new": {
              "postfix": "arc",
              "body": ["Arc::new(${receiver})"],
              "requires": "std::sync::Arc",
              "scope": "expr"
            },
            "Some": {
              "postfix": "some",
              "body": ["Some(${receiver})"],
              "scope": "expr"
            },
            "Ok": {
              "postfix": "ok",
              "body": ["Ok(${receiver})"],
              "scope": "expr"
            },
            "Rc::new": {
              "postfix": "rc",
              "body": ["Rc::new(${receiver})"],
              "requires": "std::rc::Rc",
              "scope": "expr"
            },
            "Box::pin": {
              "postfix": "boxpin",
              "body": ["Box::pin(${receiver})"],
              "requires": "std::boxed::Box",
              "scope": "expr"
            },
            "vec!": {
              "postfix": "vec",
              "body": ["vec![${receiver}]"],
              "description": "vec![]",
              "scope": "expr"
            }
          }
        }
      }
    }
  }
}
